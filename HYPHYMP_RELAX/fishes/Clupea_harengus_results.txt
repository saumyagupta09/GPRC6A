[2J[H            /HYPHY 2.5.8(MP) for Linux on x86_64\            
***************** TYPES OF STANDARD ANALYSES *****************


	(1) Selection Analyses
	(2) Evolutionary Hypothesis Testing
	(3) Relative evolutionary rate inference
	(4) Coevolutionary analysis
	(5) Basic Analyses
	(6) Codon Selection Analyses
	(7) Compartmentalization
	(8) Data File Tools
	(9) Miscellaneous
	(10) Model Comparison
	(11) Molecular Clock
	(12) Phylogeny Reconstruction
	(13) Positive Selection
	(14) Recombination
	(15) Selection/Recombination
	(16) Relative Rate
	(17) Relative Ratio

 Please select type of analyses you want to list (or press ENTER to process custom batch file):[2J[H***************** FILES IN 'Selection Analyses' ***************** 


	(1) [MEME] Test for episodic site-level selection using MEME (Mixed Effects Model of Evolution).
	(2) [FEL] Test for pervasive site-level selection using FEL (Fixed Effects Likelihood).
	(3) [SLAC] Test for pervasive site-level selection using SLAC (Single Likelihood Ancestor Counting).
	(4) [FUBAR] Test for pervasive site-level selection using FUBAR (Fast Unconstrained Bayesian AppRoximation for inferring selection).
	(5) [BUSTED] Test for episodic gene-wide selection using BUSTED (Branch-site Unrestricted Statistical Test of Episodic Diversification).
	(6) [aBSREL] Test for lineage-specific evolution using the branch-site method aBS-REL (Adaptive Branch-Site Random Effects Likelihood).
	(7) [RELAX] Test for relaxation of selection pressure along a specified set of test branches using RELAX (a random effects test of selection relaxation).
	(8) [FADE] Test a protein alignment for directional selection towards specific amino acids along a specified set of test branches using FADE (a FUBAR Approach to Directional Evolution).
	(9) [PRIME] 

 Please select the analysis you would like to perform (or press ENTER to return to the list of analysis types):
Analysis Description
--------------------
RELAX (a random effects test of selection relaxation) uses a random
effects branch-site model framework to test whether a set of 'Test'
branches evolves under relaxed selection relative to a set of
'Reference' branches (R), as measured by the relaxation parameter (K).
Version 2.1 adds a check for stability in K estimates to try to mitigate
convergence problems. Version 3 provides support for >2 branch sets.
Version 3.1 adds LHC + Nedler-Mead initial fit phase and keyword support

- __Requirements__: in-frame codon alignment and a phylogenetic tree, with at least two
groups of branches defined using the {} notation (one group can be
defined as all unlabeled branches)

- __Citation__: RELAX: Detecting Relaxed Selection in a Phylogenetic Framework (2015).
Mol Biol Evol 32 (3): 820-832

- __Written by__: Sergei L Kosakovsky Pond, Ben Murrell, Steven Weaver and Temple iGEM /
UCSD viral evolution group

- __Contact Information__: spond@temple.edu

- __Analysis Version__: 3.1


>code â€“> Universal


>Select a coding sequence alignment file (`/home/nagarjun/ajinkya/aln/fishes/Relax/`) >Loaded a multiple sequence alignment with **85** sequences, **1587** codons, and **1** partitions from `/home/nagarjun/ajinkya/aln/fishes/Relax/Clupea_harengus_tree_labelled`


####Choose the set of branches to use as the _test_ set

1. [**Unlabeled branches**] Set of 82 unlabeled branches
2. [**Foreground**] Set Foreground with 1 branches
3. [**back**] Set back with 84 branches

>Please choose an option (or press q to cancel selection):

####Choose the set of branches to use as the _reference_ set

1. [**Unlabeled branches**] Set of 82 unlabeled branches
2. [**back**] Set back with 84 branches

>Please choose an option (or press q to cancel selection):

### Branch sets for RELAX analysis
* Selected 84 branches as the _Reference_ set: `Lepisosteus_oculatus, Oncorhynchus_gorbuscha, Esox_lucius, Betta_splendens, Anabas_testudineus, Lates_calcarifer, Paralichthys_olivaceus, Cynoglossus_semilaevis, Solea_senegalensis, Toxotes_jaculatrix, Xiphias_gladius, Echeneis_naucrates, Seriola_dumerili, Seriola_lalandi, Mugil_cephalus, Archocentrus_centrarchus, Maylandia_zebra, Simochromis_diagramma, Oreochromis_niloticus, Melanotaenia_boesemani, Oryzias_latipes, Gambusia_affinis, Poecilia_reticulata, Chelmon_rostratus, Larimichthys_crocea, Acanthopagrus_latus, Sparus_aurata, Siniperca_chuatsi, Micropterus_dolomieu, Micropterus_salmoides, Epinephelus_fuscoguttatus, Plectropomus_leopardus, Sebastes_umbrosus, Cyclopterus_lumpus, Anarrhichthys_ocellatus, Cottoperca_gobio, Pseudochaenichthys_georgianus, Gymnodraco_acuticeps, Trematomus_bernacchii, Takifugu_rubripes, Dicentrarchus_labrax, Notolabrus_celidotus, Labrus_bergylta, Cheilinus_undulatus, Boleophthalmus_pectinirostris, Periophthalmus_magnuspinnatus, Sphaeramia_orbicularis, Syngnathus_acus, Syngnathus_scovelli, Hippocampus_zosterae, Hippocampus_comes, Thunnus_maccoyii, Thunnus_albacares, Myripristis_murdjan, Gadus_morhua, Electrophorus_electricus, Tachysurus_fulvidraco, Pangasianodon_hypophthalmus, Ictalurus_punctatus, Silurus_meridionalis, Astyanax_mexicanus, Colossoma_macropomum, Pygocentrus_nattereri, Xyrauchen_texanus, Myxocyprinus_asiaticus, Pimephales_promelas, Megalobrama_amblycephala, Ctenopharyngodon_idella, Danio_rerio, Puntigrus_tetrazona, Carassius_auratus, Sinocyclocheilus_rhinocerous, Labeo_rohita, Chanos_chanos, Alosa_alosa, Alosa_sapidissima, Denticeps_clupeoides, Megalops_cyprinoides, Anguilla_anguilla, Scleropages_formosus, Acipenser_ruthenus, Polyodon_spathula, Polypterus_senegalus, Erpetoichthys_calabaricus`
* Selected 1 branches as the _Test_ set: `Clupea_harengus`
* 82 branches are in the unclassified (nuisance) set: `Node8, Node18, Node26, Node24, Node22, Node30, Node35, Node33, Node29, Node21, Node17, Node44, Node43, Node41, Node52, Node50, Node48, Node40, Node38, Node16, Node62, Node60, Node58, Node69, Node67, Node74, Node79, Node77, Node73, Node85, Node84, Node82, Node72, Node66, Node65, Node57, Node56, Node93, Node91, Node55, Node15, Node97, Node96, Node14, Node103, Node106, Node102, Node109, Node101, Node13, Node12, Node11, Node7, Node124, Node122, Node120, Node129, Node127, Node119, Node117, Node133, Node140, Node138, Node137, Node147, Node145, Node144, Node136, Node132, Node116, Node115, Node155, Node153, Node152, Node114, Node6, Node159, Node5, Node4, Node2, Node163, Node166`
The number omega rate classes to include in the model (permissible range = [2,10], default value = 3, integer): 
>rates â€“> 3

>models â€“> All


### Obtaining branch lengths and nucleotide substitution biases under the nucleotide GTR model
* Log(L) = -130107.97, AIC-c = 260566.10 (175 estimated parameters)

### Obtaining the global omega estimate based on relative GTR branch lengths and nucleotide substitution biases
* Log(L) = -125700.66, AIC-c = 251769.82 (184 estimated parameters)
* non-synonymous/synonymous rate ratio for *Reference* =   0.3449
* non-synonymous/synonymous rate ratio for *Test* =   0.3840
* non-synonymous/synonymous rate ratio for *Unclassified* =   0.3460

### Improving branch lengths, nucleotide substitution biases, and global dN/dS ratios under a full codon model
* Log(L) = -125456.93, AIC-c = 251282.36 (184 estimated parameters)
* non-synonymous/synonymous rate ratio for *Reference* =   0.3267
* non-synonymous/synonymous rate ratio for *Test* =   0.4714
* non-synonymous/synonymous rate ratio for *Unclassified* =   0.3036

### Fitting the general descriptive (separate k per branch) model
Error:
Internal error 
Internal error in _LikelihoodFunction::ConjugateGradientDescent. The function evaluated at current parameter values [-123540.7659828369] does not match the last recorded LF maximum [-123540.6957448902]

Function call stack
1 :  [namespace = dTRMzlpw] Optimize(mles, ^lf_id);

-------
2 :  relax.general_descriptive.fit=estimators.FitExistingLF(relax.general_descriptive.fit[terms.likelihood_function],relax.model_object_map);
-------
