[2J[H            /HYPHY 2.5.8(MP) for Linux on x86_64\            
***************** TYPES OF STANDARD ANALYSES *****************


	(1) Selection Analyses
	(2) Evolutionary Hypothesis Testing
	(3) Relative evolutionary rate inference
	(4) Coevolutionary analysis
	(5) Basic Analyses
	(6) Codon Selection Analyses
	(7) Compartmentalization
	(8) Data File Tools
	(9) Miscellaneous
	(10) Model Comparison
	(11) Molecular Clock
	(12) Phylogeny Reconstruction
	(13) Positive Selection
	(14) Recombination
	(15) Selection/Recombination
	(16) Relative Rate
	(17) Relative Ratio

 Please select type of analyses you want to list (or press ENTER to process custom batch file):[2J[H***************** FILES IN 'Selection Analyses' ***************** 


	(1) [MEME] Test for episodic site-level selection using MEME (Mixed Effects Model of Evolution).
	(2) [FEL] Test for pervasive site-level selection using FEL (Fixed Effects Likelihood).
	(3) [SLAC] Test for pervasive site-level selection using SLAC (Single Likelihood Ancestor Counting).
	(4) [FUBAR] Test for pervasive site-level selection using FUBAR (Fast Unconstrained Bayesian AppRoximation for inferring selection).
	(5) [BUSTED] Test for episodic gene-wide selection using BUSTED (Branch-site Unrestricted Statistical Test of Episodic Diversification).
	(6) [aBSREL] Test for lineage-specific evolution using the branch-site method aBS-REL (Adaptive Branch-Site Random Effects Likelihood).
	(7) [RELAX] Test for relaxation of selection pressure along a specified set of test branches using RELAX (a random effects test of selection relaxation).
	(8) [FADE] Test a protein alignment for directional selection towards specific amino acids along a specified set of test branches using FADE (a FUBAR Approach to Directional Evolution).
	(9) [PRIME] 

 Please select the analysis you would like to perform (or press ENTER to return to the list of analysis types):
Analysis Description
--------------------
aBSREL (Adaptive branch-site random effects likelihood) uses an adaptive
random effects branch-site model framework to test whether each branch
has evolved under positive selection, using a procedure which infers an
optimal number of rate categories per branch.

- __Requirements__: in-frame codon alignment and a phylogenetic tree

- __Citation__: Less Is More: An Adaptive Branch-Site Random Effects Model for Efficient
Detection of Episodic Diversifying Selection (2015). Mol Biol Evol 32
(5): 1342-1353

- __Written by__: Sergei L Kosakovsky Pond, Ben Murrell, Steven Weaver and Temple iGEM /
UCSD viral evolution group

- __Contact Information__: spond@temple.edu

- __Analysis Version__: 2.1


>code â€“> Universal


>Select a coding sequence alignment file (`/home/nagarjun/ajinkya/aln/art_per/absrel/`) >Loaded a multiple sequence alignment with **12** sequences, **934** codons, and **1** partitions from `/home/nagarjun/ajinkya/aln/art_per/absrel/Vicugna_pacos_tree_labelled`

>branches â€“> All


### * Selected 19 branches for testing: `Equus_przewalskii, Equus_caballus, Node3, Equus_asinus, Node2, Ceratotherium_simum, Vicugna_pacos, Camelus_dromedarius, Camelus_ferus, Camelus_bactrianus, Node13, Node11, Node9, Balaenoptera_musculus, Balaenoptera_acutorostrata, Node17, Sus_scrofa, Node16, Node8`


### Obtaining branch lengths and nucleotide substitution biases under the nucleotide GTR model
Error:
The number of tree tips in 'ExKalajY.tree_0'(11) is not equal to the number of sequences in the data filter associated with the tree (12).

Function call stack
1 :  LikelihoodFunction ExKalajY.likelihoodFunction = (XnsuzVgF.lf_components);

-------
2 :  ExecuteCommands(commands, /home/nagarjun/hyphy-2.5.8/lib/hyphy/TemplateBatchFiles/libv3/);
-------
3 :  [namespace = XnsuzVgF] utility.ExecuteInGlobalNamespace("LikelihoodFunction `lfid` = (`&lf_components`)");
-------
4 :  [namespace = ExKalajY] df=estimators.CreateLFObject(this_namespace,data_filter,tree,model_template,initial_values,run_options,None);
-------
5 :  [namespace = BDHheHMX] return estimators.FitSingleModel_Ext(data_filter,tree,"models.DNA.GTR.ModelDescription",initial_values,run_options);
-------
6 :  [namespace = tKqjuEel] return estimators.FitGTR_Ext(data_filter,tree,initial_values,{});
-------
7 :  [namespace = absrel] gtr_results=estimators.FitGTR(filter_names,trees,gtr_results);
-------
8 :  [namespace = absrel] doGTR("absrel");
-------
9 :  namespace 

Step 0.doGTR("absrel");;
-------
